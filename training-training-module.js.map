{"version":3,"sources":["webpack:///./src/app/training/course-details/course-details.component.css","webpack:///./src/app/training/course-details/course-details.component.html","webpack:///./src/app/training/course-details/course-details.component.ts","webpack:///./src/app/training/course-group/course-group.component.css","webpack:///./src/app/training/course-group/course-group.component.html","webpack:///./src/app/training/course-group/course-group.component.ts","webpack:///./src/app/training/home/training-home.component.css","webpack:///./src/app/training/home/training-home.component.html","webpack:///./src/app/training/home/training-home.component.ts","webpack:///./src/app/training/training.component.css","webpack:///./src/app/training/training.component.html","webpack:///./src/app/training/training.component.ts","webpack:///./src/app/training/training.module.ts"],"names":[],"mappings":"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","file":"training-training-module.js","sourcesContent":["module.exports = \".row {\\r\\n    margin: 1%;\\r\\n}\\r\\n\\r\\n#subLink {\\r\\n    background: rgb(231, 230, 230);\\r\\n    color: rgb(102, 100, 100);\\r\\n    margin: 0 0 20px 0;\\r\\n    padding: 1% 1% 0% 2%;\\r\\n    border: 0px;\\r\\n}\\r\\n\\r\\nh1 {\\r\\n    color: rgb(27, 112, 183);\\r\\n    text-align: left;\\r\\n    font-weight: bold;\\r\\n    margin-bottom: 3%;\\r\\n}\\r\\n\\r\\n.panel-group h3 {\\r\\n    color: rgb(27, 112, 183);\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\n.logo {\\r\\n    padding: 0;\\r\\n    width: 3%;\\r\\n    height: 1%;\\r\\n}\\r\\n\\r\\n.offset-3 {\\r\\n    margin-left: 30%;\\r\\n}\\r\\n\\r\\n.row {\\r\\n    margin-bottom: 3%;\\r\\n}\\r\\n\\r\\n.carousel-indicators {\\r\\n    bottom: -10%;\\r\\n    margin-left: -30%;\\r\\n}\\r\\n\\r\\n.carousel-indicators > li {\\r\\n    background: black;\\r\\n}\\r\\n\\r\\n.carousel-control[data-slide=\\\"prev\\\"] {\\r\\n    left: -10%;\\r\\n    background: none;\\r\\n    color: black;\\r\\n}\\r\\n\\r\\n.carousel-control[data-slide=\\\"next\\\"] {\\r\\n    right: -10%;\\r\\n    background: none;\\r\\n    color: black;\\r\\n}\\r\\n\\r\\n.panel-group .panel {\\r\\n    margin-bottom: 1%;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n.panel-group .panel:hover {\\r\\n    background: rgb(238, 237, 237);\\r\\n    border-bottom: 5px solid rgb(27, 112, 183);\\r\\n    cursor: pointer;\\r\\n}\\r\\n\"","module.exports = \"<div *ngIf='filteredCourses' id=\\\"subLink\\\" class=\\\"row\\\">\\n  <p><a [routerLink]=\\\"['/training', lang, 'trainingHome', lang]\\\" routerLinkActive=\\\"active\\\">{{ trainingPage?.pageName }}</a> > <a [routerLink]=\\\"['/training', lang, 'courseGroup', filteredCourses.groupName, lang]\\\" routerLinkActive=\\\"active\\\">{{ groupName }}</a> > {{ filteredCourses.name }}</p>\\n</div>\\n\\n<div *ngIf='filteredCourses'>\\n  <div id=\\\"header\\\" class=\\\"row\\\">\\n    <div *ngFor='let logo of filteredCourses.logo; trackBy: trackBySingle' \\n          [ngClass]=\\\"{'offset-3': filteredCourses.logo.indexOf(logo) === 0 }\\\"\\n          class=\\\"col-xs-1 logo\\\">  \\n      <img [src]='logo' class=\\\"img-responsive\\\" alt=\\\"Logo\\\">\\n    </div>\\n    <div class=\\\" col-xs-8 col-sm-5\\\">  \\n      <h1>{{ filteredCourses?.name }}</h1>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <p>{{ filteredCourses?.description }} </p>\\n  </div>\\n\\n  <div *ngIf='filteredCourses.praticePicture.length > 0' class=\\\"row\\\">\\n    <div class=\\\"col-xs-12\\\">\\n      <div id=\\\"courseExample\\\" class=\\\"carousel slide\\\" data-ride=\\\"carousel\\\">\\n        <ol class=\\\"carousel-indicators\\\">\\n          <li *ngFor='let praticePicture of filteredCourses.praticePicture; trackBy: trackBySingle' \\n              data-target=\\\"#courseExample\\\" [attr.data-slide-to]=\\\"filteredCourses.praticePicture.indexOf(praticePicture)\\\"\\n              [ngClass]=\\\"{'active': filteredCourses.praticePicture.indexOf(praticePicture) === 0 }\\\"></li>\\n        </ol>\\n\\n        <div class=\\\"carousel-inner\\\">\\n\\n          <div *ngFor='let praticePicture of filteredCourses.praticePicture; trackBy: trackBySingle' class=\\\"item\\\" \\n                [ngClass]=\\\"{'active': filteredCourses.praticePicture.indexOf(praticePicture) === 0 }\\\">\\n            <img alt=\\\"First slide\\\" [src]=\\\"praticePicture\\\" style=\\\"width:100%;\\\">\\n          </div>\\n        </div>\\n\\n        <a class=\\\"left carousel-control\\\" href=\\\"#courseExample\\\" data-slide=\\\"prev\\\">\\n          <span class=\\\"glyphicon glyphicon-chevron-left\\\"></span>\\n          <span class=\\\"sr-only\\\">Previous</span>\\n        </a>\\n        <a class=\\\"right carousel-control\\\" href=\\\"#courseExample\\\" data-slide=\\\"next\\\">\\n          <span class=\\\"glyphicon glyphicon-chevron-right\\\"></span>\\n          <span class=\\\"sr-only\\\">Next</span>\\n        </a>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div *ngIf='filteredCourses.plan.length > 0' class=\\\"row\\\">\\n    <h1 style=\\\"text-align: center\\\">Course Plan</h1>\\n  </div>\\n\\n  <div *ngFor='let plan of filteredCourses.plan; trackBy: trackByMulti' class=\\\"row\\\">\\n    <div class=\\\"panel-group\\\" [id]='plan.title.replace(\\\" \\\", \\\"\\\").substr(0, 4) + \\\"Accordion\\\"'>\\n      <h3>{{ plan?.title }}</h3>\\n      \\n      <div *ngFor='let planItem of plan.planItem; trackBy: trackByMulti' data-toggle=\\\"collapse\\\"\\n          [class]='\\\"panel panel-default col-sm-offset-\\\" + plan.planItem.indexOf(planItem)'\\n          [attr.data-parent]='\\\"#\\\" + plan.title.replace(\\\" \\\", \\\"\\\").substr(0, 4) + \\\"Accordion\\\"'\\n          [attr.href]='\\\"#\\\" + plan.title.replace(\\\" \\\",\\\"\\\").substr(0, 4) + \\\"Collapse\\\" + plan.planItem.indexOf(planItem)' >\\n        <div class=\\\"panel-heading\\\">\\n          <h4 class=\\\"panel-title\\\">\\n              {{ planItem?.item }}\\n          </h4>\\n        </div>\\n        <div [id]='plan.title.replace(\\\" \\\",\\\"\\\").substr(0, 4) + \\\"Collapse\\\" + plan.planItem.indexOf(planItem)' \\n            class=\\\"panel-collapse collapse\\\">\\n          <div class=\\\"panel-body\\\">\\n              Estimated time\\n              <ul>\\n                <li>Course: {{ planItem?.courseTime }}h</li>\\n                <li *ngIf='planItem.practiceTime'>Practice: {{ planItem?.practiceTime }}h</li>\\n              </ul>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {TranslateService} from '@ngx-translate/core';\n\nimport {IPageContain} from '../../page-contain';\nimport {ICourse} from '../course';\n\nimport {Observable} from 'rxjs/Observable';\n\n/**\n * Component corresponding to the course page of Training\n */\n@Component({\n  styleUrls: ['./course-details.component.css'],\n  templateUrl: './course-details.component.html'\n})\nexport class CourseDetailsComponent implements OnInit {\n  /**\n   * This variable contains all the contents of all the pages loaded inside the pageContain.json file\n   */\n  public pages: Observable<IPageContain[]>;\n\n  /**\n   * courses contain the list of all available courses in the courses.json file\n   */\n  public courses: Observable<ICourse[]>;\n\n  /**\n   * This variable contains the name of the group of courses to display\n   */\n  public groupName: string;\n\n  /**\n   * this variable contains the language parameter in the URL\n   */\n  public lang: string;\n\n  /**\n   * filteredCourses contain a specific course, we obtain it buy apply a filter by name to courses\n   */\n  public filteredCourses: ICourse;\n\n  /**\n   * This variable contains the content of the Training page\n   */\n  private trainingPage: IPageContain;\n\n  /**\n   * This function represents the constructor of our class,\n   * its role is to create the service objects used for data acquisition as well as a routing object to read the parameters in the URL\n   */\n  constructor(private route: ActivatedRoute,\n              private dataService: TranslateService) { }\n\n  /**\n   * This function is called to get courses then apply a filter by name to have data with same name in output\n   * This function also assigns a literal value to the groupName variable based on the current course.\n   */\n  public ngOnInit() {\n    /**\n     * this statement retrieves the language parameter in the URL\n     */\n    this.route.paramMap.subscribe(pmap => this.lang = pmap.get('lang'));\n    /**\n     * this statement retrieves the parameter in the URL\n     */\n    // const name = this.route.snapshot.paramMap.get('name');\n    let urlParam;\n    this.route.paramMap.subscribe(pmap => urlParam = pmap.get('name'));\n\n    /**\n     * this instruction retrieves the contents of the pages\n     */\n    this.courses = this.dataService.getTranslation('courses_' + this.lang);\n\n    this.dataService.getTranslation('courses_' + this.lang)\n            .subscribe(courses => {\n                        this.filteredCourses = courses.filter((course: ICourse) =>\n                        course.name === urlParam)[0];\n                        /**\n                         * this statement decodes the code of the corresponding course group for sub-navigation\n                         */\n                        switch (this.filteredCourses.groupName) {\n                          case 'SFEB': this.groupName = 'Software Front End Beginner';\n                                       break;\n                          case 'SFEA': this.groupName = 'Software Front End Advanced';\n                                       break;\n                          case 'SBEB': this.groupName = 'Software Back End Beginner';\n                                       break;\n                          case 'SBEA': this.groupName = 'Software Back End Advanced';\n                                       break;\n                          default: this.groupName = 'undefined';\n                        }\n            });\n    /**\n     * this instruction retrieves the contents of the pages\n     */\n    this.pages = this.dataService.getTranslation('pageContain_' + this.lang);\n\n    this.dataService.getTranslation('pageContain_' + this.lang)\n            .subscribe(pages => {\n                        this.trainingPage = pages.filter((page: IPageContain) =>\n                        page.id === 'training')[0];\n            });\n  }\n\n  /**\n   * we have a problem because Angular can’t keep track of items in the collection and has no knowledge of which items have been removed or added.\n   * We can help Angular to track which items added or removed by providing a trackBy function.\n   * The trackBy function takes the  item as arguments and needs to return this item\n   */\n  public trackBySingle(item) {\n    return item;\n  }\n\n  /**\n   * we have a problem because Angular can’t keep track of items in the collection and has no knowledge of which items have been removed or added.\n   * We can help Angular to track which items added or removed by providing a trackBy function.\n   * The trackBy function takes the index and the current item as arguments and needs to return the unique identifier for this item\n   */\n  private trackByMulti(index, item) {\n    return index;\n  }\n}\n","module.exports = \"#subLink {\\r\\n    background: rgb(231, 230, 230);\\r\\n    color: rgb(102, 100, 100);\\r\\n    margin: 0 0 20px 0;\\r\\n    padding: 1% 1% 0% 2%;\\r\\n    border: 0px;\\r\\n}\\r\\n\\r\\nh1 {\\r\\n    color: rgb(27, 112, 183);\\r\\n    text-align: center;\\r\\n    font-weight: bold;\\r\\n    margin-bottom: 3%;\\r\\n}\\r\\n\\r\\nh3 {\\r\\n    color: rgb(27, 112, 183);\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\np {\\r\\n    text-align: justify;\\r\\n}\\r\\n\\r\\n.col-sm-3 {\\r\\n    margin: 0 1% 3% 2%;\\r\\n    width: 30%;\\r\\n    height: 270px;\\r\\n    border: 1px solid lightgray;\\r\\n    border-bottom: 5px solid lightgray;\\r\\n}\\r\\n\\r\\n.col-sm-3 > button {\\r\\n    position: absolute;\\r\\n    bottom: 5%;\\r\\n}\\r\\n\\r\\n.col-sm-3:hover {\\r\\n    background: rgb(238, 237, 237);\\r\\n    border-bottom: 5px solid rgb(27, 112, 183);\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n@media (max-width: 768px) { \\r\\n    .col-sm-3 {\\r\\n        margin-left: 20%;\\r\\n        width: 60%;\\r\\n    }\\r\\n}\\r\\n\\r\\n@media (min-width: 768px) and (max-width: 992px) { \\r\\n    .col-sm-3 {\\r\\n        margin: 0 0% 3% 5%;\\r\\n        width: 40%;\\r\\n    }\\r\\n}\"","module.exports = \"<div *ngIf='filteredCourses'>\\n  <div id=\\\"subLink\\\" class=\\\"row\\\">\\n    <p><a [routerLink]=\\\"['/training', lang, 'trainingHome', lang]\\\" routerLinkActive=\\\"active\\\">{{ trainingPage?.pageName }}</a> > {{ groupName }}</p>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <h1>{{ groupName }}</h1>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div *ngFor='let course of filteredCourses; trackBy: trackByMulti' class=\\\"col-sm-3\\\" [routerLink]=\\\"['/training', lang, 'courseDetail', course.name, lang]\\\">\\n      <h3>{{ course?.name }}</h3>\\n      <br>\\n      <p>{{ course?.goal }}</p>\\n      <br>\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/training', lang, 'courseDetail', course.name, lang]\\\">Show course</button>\\n    </div>\\n  </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {TranslateService} from '@ngx-translate/core';\n\nimport {IPageContain} from '../../page-contain';\nimport {ICourse} from '../course';\n\nimport {Observable} from 'rxjs/Observable';\n\n/**\n * Component corresponding to the course group page of Training\n */\n@Component({\n  styleUrls: ['./course-group.component.css'],\n  templateUrl: './course-group.component.html'\n})\nexport class CourseGroupComponent implements OnInit {\n  // tslint:disable:no-unused-css\n  /**\n   * This variable contains all the contents of all the pages loaded inside the pageContain.json file\n   */\n  public pages: Observable<IPageContain[]>;\n\n  /**\n   * courses contain the list of all available courses in the courses.json file\n   */\n  public courses: Observable<ICourse[]>;\n\n  /**\n   * This variable contains the name of the group of courses to display\n   */\n  public groupName: string;\n\n  /**\n   * this variable contains the language parameter in the URL\n   */\n  public lang: string;\n\n  /**\n   * filteredCourses contain a group of courses, we obtain it buy apply a filter by group to courses\n   */\n  public filteredCourses: ICourse [];\n\n  /**\n   * This variable contains the content of the Training page\n   */\n  private trainingPage: IPageContain;\n\n  /**\n   * This function represents the constructor of our class,\n   * its role is to create the service objects used for data acquisition as well as a routing object to read the parameters in the URL\n   */\n  constructor(private route: ActivatedRoute,\n              private dataService: TranslateService) { }\n\n  /**\n   * This function is called to get courses then apply a filter by group to have data with same group name in output\n   * This function also assigns a literal value to the groupName variable based on the group code passed as a parameter in the URL.\n   */\n  public ngOnInit() {\n    /**\n     * this statement retrieves the language parameter in the URL\n     */\n    this.route.paramMap.subscribe(pmap => this.lang = pmap.get('lang'));\n    /**\n     * this statement retrieves the parameter in the URL\n     */\n    let group;\n    this.route.paramMap.subscribe(pmap => group = pmap.get('group'));\n\n    /**\n     * this instruction decodes the code of the course group transmitted in parameter in the URL\n     */\n    switch (group) {\n      case 'SFEB': this.groupName = 'Software Front End Beginner';\n                   break;\n      case 'SFEA': this.groupName = 'Software Front End Advanced';\n                   break;\n      case 'SBEB': this.groupName = 'Software Back End Beginner';\n                   break;\n      case 'SBEA': this.groupName = 'Software Back End Advanced';\n                   break;\n      default: this.groupName = 'undefined';\n    }\n\n    /**\n     * this instruction retrieves the contents of the pages\n     */\n    this.courses = this.dataService.getTranslation('courses_' + this.lang);\n\n    this.dataService.getTranslation('courses_' + this.lang)\n            .subscribe(courses => {\n                        this.filteredCourses = courses.filter((course: ICourse) =>\n                        course.groupName === group);\n            });\n    /**\n     * this instruction retrieves the contents of the pages\n     */\n    this.pages = this.dataService.getTranslation('pageContain_' + this.lang);\n\n    this.dataService.getTranslation('pageContain_' + this.lang)\n            .subscribe(pages => {\n                        this.trainingPage = pages.filter((page: IPageContain) =>\n                        page.id === 'training')[0];\n            });\n  }\n\n  /**\n   * we have a problem because Angular can’t keep track of items in the collection and has no knowledge of which items have been removed or added.\n   * We can help Angular to track which items added or removed by providing a trackBy function.\n   * The trackBy function takes the index and the current item as arguments and needs to return the unique identifier for this item\n   */\n  public trackByMulti(index, item) {\n    return index;\n  }\n}\n","module.exports = \"* {\\r\\n    padding: 5px;\\r\\n    margin: 1%;\\r\\n}\\r\\n\\r\\nhr {\\r\\n    border: 1px solid lightgray;\\r\\n    padding: 0px;\\r\\n}\\r\\n\\r\\np {\\r\\n    text-align: justify;\\r\\n    margin: 0%;\\r\\n}\\r\\n\\r\\nh1 {\\r\\n    color: rgb(27, 112, 183);\\r\\n    text-align: center;\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\nh3 {\\r\\n    color: rgb(27, 112, 183);\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\n#subLink {\\r\\n    background: rgb(231, 230, 230);\\r\\n    color: rgb(102, 100, 100);\\r\\n    padding: 1% 1% 0% 2%;\\r\\n    margin-top: 0%;\\r\\n    border: 0px;\\r\\n}\\r\\n\\r\\n.category {\\r\\n    margin-top: 5%;\\r\\n    margin-bottom: 3%;\\r\\n}\\r\\n\\r\\n.category > .row, .category > .row {\\r\\n    margin-top: 2%;\\r\\n}\\r\\n\\r\\n.col-sm-5 {\\r\\n    margin-left: 5%;\\r\\n    margin-bottom: 2%;\\r\\n    height: 280px;\\r\\n    border: 1px solid lightgray;\\r\\n    border-bottom: 5px solid lightgray;\\r\\n}\\r\\n\\r\\n.col-sm-5 > button {\\r\\n    position: absolute;\\r\\n    bottom: 5%;\\r\\n}\\r\\n\\r\\n.col-sm-5:hover {\\r\\n    background: rgb(238, 237, 237);\\r\\n    border-bottom: 5px solid rgb(27, 112, 183);\\r\\n    cursor: pointer;\\r\\n}\"","module.exports = \"<div id=\\\"subLink\\\" class=\\\"row\\\">\\n  <p>{{ trainingPage?.pageName }} </p>\\n</div>\\n\\n<div *ngFor='let category of trainingPage?.category; trackBy: trackByMulti' class=\\\"row category\\\">\\n  <div class=\\\"row\\\">\\n    <h1>{{ category?.title }}</h1>\\n  </div>\\n  \\n  <div class=\\\"row\\\">\\n    <p>{{ category?.textDesc }}</p>\\n  </div>\\n  \\n  <div class=\\\"row\\\">\\n    <div *ngFor='let article of category.article; trackBy: trackByMulti' class=\\\"col-xs-11 col-sm-5 article\\\" [routerLink]=\\\"['/training', lang, 'courseGroup', article.id, lang]\\\">\\n      <h3>{{ article?.title }}</h3><hr>\\n      <p *ngFor='let contenu of article.contenu; trackBy: trackByMulti'>{{ contenu }}</p>\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/training', lang, 'courseGroup', article.id, lang]\\\">Show courses</button>\\n    </div>\\n  </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {TranslateService} from '@ngx-translate/core';\n\nimport {IPageContain} from '../../page-contain';\n\nimport {Observable} from 'rxjs/Observable';\n\n/**\n * Component corresponding to the home page Training\n */\n@Component({\n  selector: 'app-training-home',\n  styleUrls: ['./training-home.component.css'],\n  templateUrl: './training-home.component.html'\n})\nexport class TrainingHomeComponent implements OnInit {\n  // tslint:disable:no-unused-css\n  /**\n   * This variable contains all the contents of all the pages loaded inside the pageContain.json file\n   */\n  public pages: Observable<IPageContain[]>;\n\n  /**\n   * This variable contains the content of the Training page\n   */\n  public trainingPage: IPageContain;\n\n  /**\n   * this variable contains the language parameter in the URL\n   */\n  public lang: string;\n\n  /**\n   * This function represents the constructor of our class, its role is to create a service object used for data acquisition\n   */\n  constructor(private dataService: TranslateService,\n              private route: ActivatedRoute) {\n  }\n\n  /**\n   * This function is called during the initialization of our component to load the content of the page into the variables defined above.\n   */\n  public ngOnInit() {\n    /**\n     * this statement retrieves the language parameter in the URL\n     */\n    this.route.paramMap.subscribe(pmap => this.lang = pmap.get('lang'));\n\n    /**\n     * this instruction retrieves the contents of the pages\n     */\n    this.pages = this.dataService.getTranslation('pageContain_' + this.lang);\n\n    this.dataService.getTranslation('pageContain_' + this.lang)\n            .subscribe(pages => {\n                        this.trainingPage = pages.filter((page: IPageContain) =>\n                        page.id === 'training')[0];\n            });\n  }\n\n  /**\n   * we have a problem because Angular can’t keep track of items in the collection and has no knowledge of which items have been removed or added.\n   * We can help Angular to track which items added or removed by providing a trackBy function.\n   * The trackBy function takes the index and the current item as arguments and needs to return the unique identifier for this item\n   */\n  public trackByMulti(index, item) {\n    return index;\n  }\n}\n","module.exports = \"#title {\\r\\n    height: 400px;\\r\\n    background-size: cover;\\r\\n    padding-top: 150px;\\r\\n}\\r\\n\\r\\n@media only screen and (max-width: 767px) {\\r\\n  #title {\\r\\n    height: 300px;\\r\\n  }\\r\\n}\\r\\n\\r\\n#title > h1 {\\r\\n    text-align: center;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.container {\\r\\n    margin-bottom: 50px;\\r\\n}\\r\\n\"","module.exports = \"\\n\\n<div id=\\\"title\\\" class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\" [ngStyle]=\\\"{ 'background': 'url(' + trainingPage?.titleImage + ') no-repeat fixed center',\\n     'background-size': trainingPage?.titleImage ? 'cover': ''}\\\">\\n  <h1>{{ trainingPage?.title }}</h1>\\n</div>\\n\\n\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {TranslateService} from '@ngx-translate/core';\n\nimport {IPageContain} from '../page-contain';\n\nimport {Observable} from 'rxjs/Observable';\n\n/**\n * Component corresponding to the Training page\n */\n@Component({\n  selector: 'app-training',\n  styleUrls: ['./training.component.css'],\n  templateUrl: './training.component.html',\n})\nexport class TrainingComponent implements OnInit {\n\n  /**\n   * This variable contains all the contents of all the pages loaded inside the pageContain.json file\n   */\n  public pages: Observable<IPageContain[]>;\n\n  /**\n   * This variable contains the content of the Training page\n   */\n  public trainingPage: IPageContain;\n\n  /**\n   * this variable contains the language parameter in the URL\n   */\n  public lang: string;\n\n  /**\n   * This function represents the constructor of our class, its role is to create a service object used for page contain acquisition\n   */\n  constructor(public dataService: TranslateService,\n              private route: ActivatedRoute,\n              private router: Router) {\n  }\n\n  /**\n   * This function is called during the initialization of our component to load the content of the page into the variables defined above.\n   */\n  public ngOnInit() {\n    /**\n     * this statement retrieves the language parameter in the URL\n     */\n    this.route.paramMap.subscribe(pmap => this.lang = pmap.get('lang'));\n\n    /**\n     * this instruction retrieves the contents of the pages\n     */\n    this.pages = this.dataService.getTranslation('pageContain_' + this.lang);\n\n    this.dataService.getTranslation('pageContain_' + this.lang).subscribe(pages => {\n                        this.trainingPage = pages.filter((page: IPageContain) =>\n                          page.id === 'training')[0];\n    });\n    if (this.route.firstChild == null) {\n      this.router.navigate(['/training', this.lang, 'trainingHome', this.lang]);\n    }\n  }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {RouterModule} from '@angular/router';\n\nimport {CourseDetailsComponent} from './course-details/course-details.component';\nimport {CourseGroupComponent} from './course-group/course-group.component';\nimport {TrainingHomeComponent} from './home/training-home.component';\nimport {TrainingComponent} from './training.component';\n\n@NgModule({\n  declarations: [\n    TrainingComponent,\n    TrainingHomeComponent,\n    CourseGroupComponent,\n    CourseDetailsComponent\n  ],\n  imports: [\n    RouterModule.forChild([\n        {\n          path: ':lang',\n          // tslint:disable-next-line:object-literal-sort-keys\n          component: TrainingComponent,\n          children: [\n            {path: 'trainingHome/:lang', component: TrainingHomeComponent},\n            {path: 'courseGroup/:group/:lang', component: CourseGroupComponent},\n            {path: 'courseDetail/:name/:lang', component: CourseDetailsComponent},\n          ]\n        }\n    ]),\n    CommonModule\n  ],\n  providers: []\n})\nexport class TrainingModule { }\n"],"sourceRoot":""}