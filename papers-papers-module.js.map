{"version":3,"sources":["webpack:///./src/app/papers/details/papers-details.component.css","webpack:///./src/app/papers/details/papers-details.component.html","webpack:///./src/app/papers/details/papers-details.component.ts","webpack:///./src/app/papers/home/papers-home.component.css","webpack:///./src/app/papers/home/papers-home.component.html","webpack:///./src/app/papers/home/papers-home.component.ts","webpack:///./src/app/papers/papers.component.css","webpack:///./src/app/papers/papers.component.html","webpack:///./src/app/papers/papers.component.ts","webpack:///./src/app/papers/papers.module.ts"],"names":[],"mappings":"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","file":"papers-papers-module.js","sourcesContent":["module.exports = \"* {\\r\\n    padding: 5px;\\r\\n    margin: 0.5%;\\r\\n}\\r\\n\\r\\np {\\r\\n    text-align: justify;\\r\\n    margin: 0%;\\r\\n}\\r\\n\\r\\n#subLink {\\r\\n    background: rgb(231, 230, 230);\\r\\n    color: rgb(102, 100, 100);\\r\\n    margin: 0 0 20px 0;\\r\\n    padding: 1% 1% 0% 2%;\\r\\n    border: 0px;\\r\\n}\\r\\n\\r\\nh1 {\\r\\n    color: rgb(27, 112, 183);\\r\\n    text-align: left;\\r\\n    font-weight: bold;\\r\\n    margin-bottom: 2%;\\r\\n}\\r\\n\\r\\nh4 {\\r\\n    text-align: left;\\r\\n}\\r\\n\\r\\n.offerDesc > h4 {\\r\\n    font-weight: bold;\\r\\n}\"","module.exports = \"<div *ngIf='filteredPapers' id=\\\"subLink\\\" class=\\\"row\\\">\\n    <p><a [routerLink]=\\\"['/papers', lang, 'papersHome', lang]\\\" routerLinkActive=\\\"active\\\">{{ papersPage?.pageName }}</a> > {{ filteredPapers?.title }}</p>\\n  </div>\\n  \\n  <div *ngIf='filteredPapers'>\\n    <div class=\\\"row\\\">\\n      <h1>{{ filteredPapers?.title }}</h1>\\n      <h4>{{ filteredPapers?.date }}</h4>\\n    </div>\\n  \\n    <div id=\\\"journal\\\" class=\\\"row offerDesc\\\">\\n      <h4>Journal:</h4> <br>\\n      <p>{{ filteredPapers?.journal }}</p>\\n    </div><br>\\n  \\n    <div id=\\\"authors\\\" class=\\\"row offerDesc\\\">\\n      <h4>Paper Authors:</h4> <br>\\n      <ul>\\n        <li *ngFor='let authors of filteredPapers.authors; trackBy: trackByMulti'> {{ authors }} </li>\\n      </ul>\\n    </div>\\n  \\n    <div id=\\\"description\\\" class=\\\"row offerDesc\\\">\\n      <h4>Description:</h4> <br>\\n      <ul>\\n        <li *ngFor='let description of filteredPapers.description; trackBy: trackByMulti'> {{ description }} </li>\\n      </ul>\\n    </div>\\n  \\n    <div id=\\\"figure\\\" class=\\\"row offerDesc\\\">\\n      <h4>Figure:</h4> <br>\\n      <div *ngIf='filteredPapers.image.length > 0' class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <div id=\\\"paperImages\\\" class=\\\"carousel slide\\\" data-ride=\\\"carousel\\\">\\n            <ol class=\\\"carousel-indicators\\\">\\n              <li *ngFor='let image of filteredPapers.image; trackBy: trackBySingle' \\n                  data-target=\\\"#paperImages\\\" [attr.data-slide-to]=\\\"filteredPapers.image.indexOf(image)\\\"\\n                  [ngClass]=\\\"{'active': filteredPapers.image.indexOf(image) === 0 }\\\"></li>\\n            </ol>\\n    \\n            <div class=\\\"carousel-inner\\\">\\n    \\n              <div *ngFor='let image of filteredPapers.image; trackBy: trackBySingle' class=\\\"item\\\" \\n                    [ngClass]=\\\"{'active': filteredPapers.image.indexOf(image) === 0 }\\\">\\n                <img alt=\\\"First slide\\\" [src]=\\\"image\\\" style=\\\"width:100%;\\\">\\n              </div>\\n            </div>\\n    \\n            <a class=\\\"left carousel-control\\\" href=\\\"#paperImages\\\" data-slide=\\\"prev\\\">\\n              <span class=\\\"glyphicon glyphicon-chevron-left\\\"></span>\\n              <span class=\\\"sr-only\\\">Previous</span>\\n            </a>\\n            <a class=\\\"right carousel-control\\\" href=\\\"#paperImages\\\" data-slide=\\\"next\\\">\\n              <span class=\\\"glyphicon glyphicon-chevron-right\\\"></span>\\n              <span class=\\\"sr-only\\\">Next</span>\\n            </a>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {TranslateService} from '@ngx-translate/core';\n\nimport {IPageContain} from '../../page-contain';\nimport {IPapers} from './../paper';\n\nimport {Observable} from 'rxjs/Observable';\n\n/**\n * Component corresponding to the papers details page of Papers\n */\n@Component({\n  styleUrls: ['./papers-details.component.css'],\n  templateUrl: './papers-details.component.html'\n})\nexport class PapersDetailsComponent implements OnInit {\n    /**\n     * This variable contains all the contents of all the pages loaded inside the pageContain.json file\n     */\n    public pages: Observable<IPageContain[]>;\n\n    /**\n     * This variable contain the list of all available papers in the papers.json file\n     */\n    public papers: Observable<IPapers[]>;\n\n    /**\n     * this variable contains the language parameter in the URL\n     */\n    public lang: string;\n\n    /**\n     * filteredPapers contain a specific paper, we obtain it buy apply a filter by title to papers\n     */\n    public filteredPapers: IPapers;\n\n    /**\n     * This variable contains the content of the Papers page\n     */\n    public papersPage: IPageContain;\n\n    /**\n     * This function represents the constructor of our class,\n     * its role is to create the service objects used for data acquisition as well as a routing object to read the parameters in the URL\n     */\n    constructor(private route: ActivatedRoute,\n                private dataService: TranslateService) { }\n\n    /**\n     * On intialization of the component, we first load all data inside the papers.json and then filtering them to have a single paper\n     * after it, we will display our paper specification in the template.\n     */\n    public ngOnInit() {\n      /**\n       * this statement retrieves the language parameter in the URL\n       */\n      this.route.paramMap.subscribe(pmap => this.lang = pmap.get('lang'));\n      /**\n       * this statement retrieves the parameter in the URL\n       */\n      // const name = this.route.snapshot.paramMap.get('name');\n      let urlParam;\n      this.route.paramMap.subscribe(pmap => urlParam = pmap.get('name'));\n\n      /**\n       * this instruction retrieves the contents of the pages\n       */\n      this.papers = this.dataService.getTranslation('papers_' + this.lang);\n\n      this.dataService.getTranslation('papers_' + this.lang)\n              .subscribe(papers => {\n                          this.filteredPapers = papers.filter((paper: IPapers) =>\n                          paper.title === urlParam)[0];\n              });\n      /**\n       * this instruction retrieves the contents of the pages\n       */\n      this.pages = this.dataService.getTranslation('pageContain_' + this.lang);\n\n      this.dataService.getTranslation('pageContain_' + this.lang)\n              .subscribe(pages => {\n                          this.papersPage = pages.filter((page: IPageContain) =>\n                          page.id === 'papers')[0];\n              });\n    }\n\n    /**\n     * we have a problem because Angular can’t keep track of items in the collection and has no knowledge of which items have been removed or added.\n     * We can help Angular to track which items added or removed by providing a trackBy function.\n     * The trackBy function takes the index and the current item as arguments and needs to return the unique identifier for this item\n     */\n    public trackByMulti(index, item) {\n      return index;\n    }\n\n}\n","module.exports = \"* {\\r\\n    padding: 5px;\\r\\n    margin: 1%;\\r\\n}\\r\\n\\r\\np {\\r\\n    text-align: justify;\\r\\n    margin: 0%;\\r\\n}\\r\\n\\r\\nh1 {\\r\\n    color: rgb(27, 112, 183);\\r\\n    text-align: center;\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\nh3 {\\r\\n    color: rgb(27, 112, 183);\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\n.row {\\r\\n    margin-bottom: 1%;\\r\\n}\\r\\n\\r\\n#subLink {\\r\\n    background: rgb(231, 230, 230);\\r\\n    color: rgb(102, 100, 100);\\r\\n    padding: 1% 1% 0% 2%;\\r\\n    margin-top: 0%;\\r\\n    border: 0px;\\r\\n}\\r\\n\\r\\n.col-sm-4 {\\r\\n    width: 30%;\\r\\n    margin: 0 1% 2% 2%;\\r\\n}\\r\\n\\r\\n.col-sm-4 > img {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.tonkainPaper .col-sm-4 {\\r\\n    margin: 0 1% 3% 2%;\\r\\n    width: 30%;\\r\\n    height: 150px;\\r\\n    border: 1px solid lightgray;\\r\\n    border-bottom: 5px solid lightgray;\\r\\n}\\r\\n\\r\\n.tonkainPaper .col-sm-4 > button {\\r\\n    position: absolute;\\r\\n    bottom: 5%;\\r\\n}\\r\\n\\r\\n.tonkainPaper .col-sm-4:hover {\\r\\n    background: rgb(238, 237, 237);\\r\\n    border-bottom: 5px solid rgb(27, 112, 183);\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n@media (max-width: 768px) { \\r\\n    .tonkainPaper .col-sm-4, .col-sm-4 {\\r\\n        margin-left: 10%;\\r\\n        width: 80%;\\r\\n    }\\r\\n}\\r\\n\"","module.exports = \"<div id=\\\"subLink\\\" class=\\\"row\\\">\\n  <p>{{ papersPage?.pageName }} </p>\\n</div>\\n\\n<div *ngFor='let category of papersPage?.category; trackBy: trackByMulti' class=\\\"row category\\\">\\n  <div class=\\\"row\\\">\\n    <h1>{{ category?.title }}</h1>\\n  </div>\\n  \\n  <div class=\\\"row\\\">\\n    <p>{{ category?.textDesc }}</p>\\n  </div>\\n</div>\\n\\n<div class=\\\"row tonkainPaper\\\">\\n  <div *ngFor='let papers of filteredpapers; trackBy: trackByMulti' class=\\\"col-sm-4\\\" [routerLink]=\\\"['/papers', lang, 'details', papers?.title, lang]\\\">\\n    <h3>{{ papers?.title }}</h3>\\n    <br>\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/papers', lang, 'details', papers?.title, lang]\\\">View details</button>\\n  </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {TranslateService} from '@ngx-translate/core';\n\nimport {IPageContain} from '../../page-contain';\nimport {IPapers} from '../paper';\n\nimport {Observable} from 'rxjs/Observable';\n\n/**\n * Component corresponding to the Papers home page\n */\n@Component({\n  styleUrls: ['./papers-home.component.css'],\n  templateUrl: './papers-home.component.html'\n})\nexport class PapersHomeComponent implements OnInit {\n  // tslint:disable:no-unused-css\n  /**\n   * This variable contains all the contents of all the pages loaded inside the pageContain.json file\n   */\n  public pages: Observable<IPageContain[]>;\n\n  /**\n   * papers contain the list of all available papers in the papers.json file\n   */\n  public papers: Observable<IPapers[]>;\n\n  /**\n   * this variable contains the language parameter in the URL\n   */\n  public lang: string;\n\n  /**\n   * filteredpapers contain a group of papers, we obtain it buy apply a filter by group to papers\n   */\n  public filteredpapers: IPapers [];\n\n  /**\n   * This variable contains the content of the Papers page\n   */\n  public papersPage: IPageContain;\n\n  /**\n   * This function represents the constructor of our class,\n   * its role is to create the service objects used for data acquisition as well as a routing object to read the parameters in the URL\n   */\n  constructor(private route: ActivatedRoute,\n              private dataService: TranslateService) { }\n\n  /**\n   * This function is called to get papers in output.\n   */\n  public ngOnInit() {\n    /**\n     * this statement retrieves the language parameter in the URL\n     */\n    this.route.paramMap.subscribe(pmap => this.lang = pmap.get('lang'));\n\n    /**\n     * this instruction retrieves the contents of the pages\n     */\n    this.papers = this.dataService.getTranslation('papers_' + this.lang);\n\n    this.dataService.getTranslation('papers_' + this.lang)\n            .subscribe(papers => {\n                        this.filteredpapers = papers;\n            });\n    /**\n     * this instruction retrieves the contents of the pages\n     */\n    this.pages = this.dataService.getTranslation('pageContain_' + this.lang);\n\n    this.dataService.getTranslation('pageContain_' + this.lang)\n            .subscribe(pages => {\n                        this.papersPage = pages.filter((page: IPageContain) =>\n                        page.id === 'papers')[0];\n            });\n  }\n\n  /**\n   * we have a problem because Angular can’t keep track of items in the collection and has no knowledge of which items have been removed or added.\n   * We can help Angular to track which items added or removed by providing a trackBy function.\n   * The trackBy function takes the index and the current item as arguments and needs to return the unique identifier for this item\n   */\n  public trackByMulti(index, item) {\n    return index;\n  }\n\n}\n","module.exports = \"#title {\\r\\n    height: 400px;\\r\\n    padding-top: 150px;\\r\\n}\\r\\n\\r\\n#title > h1 {\\r\\n    text-align: center;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.container {\\r\\n    margin-bottom: 50px;\\r\\n}\\r\\n\"","module.exports = \"\\n\\n<div id=\\\"title\\\" class=\\\"col-xs-12\\\" [ngStyle]=\\\"{ 'background': 'url(' + papersPage?.titleImage + ') no-repeat fixed center',\\n     'background-size': papersPage?.titleImage ? 'cover': ''}\\\">\\n  <h1>{{ papersPage?.title }}</h1>\\n</div>\\n\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n  \\n\"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {TranslateService} from '@ngx-translate/core';\n\nimport {IPageContain} from '../page-contain';\n\nimport {Observable} from 'rxjs/Observable';\n/**\n * Component corresponding to the Papers page\n */\n@Component({\n  styleUrls: ['./papers.component.css'],\n  templateUrl: './papers.component.html'\n})\nexport class PapersComponent implements OnInit {\n\n  /**\n   * This variable contains all the contents of all the pages loaded inside the pageContain.json file\n   */\n  public pages: Observable<IPageContain[]>;\n\n  /**\n   * This variable contains the content of the Papers page\n   */\n  public papersPage: IPageContain;\n\n  /**\n   * this variable contains the language parameter in the URL\n   */\n  public lang: string;\n\n  /**\n   * This function represents the constructor of our class, its role is to create a service object used for page contain acquisition\n   */\n  constructor(public dataService: TranslateService,\n              private route: ActivatedRoute,\n              private router: Router) {\n  }\n\n  /**\n   * This function is called during the initialization of our component to load the content of the page into the variables defined above.\n   */\n  public ngOnInit() {\n    /**\n     * this statement retrieves the language parameter in the URL\n     */\n    this.route.paramMap.subscribe(pmap => this.lang = pmap.get('lang'));\n\n    /**\n     * this instruction retrieves the contents of the pages\n     */\n    this.pages = this.dataService.getTranslation('pageContain_' + this.lang);\n\n    this.dataService.getTranslation('pageContain_' + this.lang).subscribe(pages => {\n                        this.papersPage = pages.filter((page: IPageContain) =>\n                          page.id === 'papers')[0];\n            });\n    if (this.route.firstChild == null) {\n      this.router.navigate(['/papers', this.lang, 'papersHome', this.lang]);\n    }\n  }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {RouterModule} from '@angular/router';\n\nimport {PapersDetailsComponent} from './details/papers-details.component';\nimport {PapersHomeComponent} from './home/papers-home.component';\nimport {PapersComponent} from './papers.component';\n\n@NgModule({\n  declarations: [\n    PapersComponent,\n    PapersHomeComponent,\n    PapersDetailsComponent\n  ],\n  imports: [\n    RouterModule.forChild([\n      {\n        path: ':lang',\n        // tslint:disable-next-line:object-literal-sort-keys\n        component: PapersComponent,\n        children: [\n          {path: 'papersHome/:lang', component: PapersHomeComponent},\n          {path: 'details/:name/:lang', component: PapersDetailsComponent}\n        ]\n      }\n    ]),\n    CommonModule\n  ],\n  providers: []\n})\nexport class PapersModule { }\n"],"sourceRoot":""}